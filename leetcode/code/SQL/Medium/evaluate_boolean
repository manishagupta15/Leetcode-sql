-- Question 78
-- Table Variables:

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | name          | varchar |
-- | value         | int     |
-- +---------------+---------+
-- name is the primary key for this table.
-- This table contains the stored variables and their values.
 

-- Table Expressions:

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | left_operand  | varchar |
-- | operator      | enum    |
-- | right_operand | varchar |
-- +---------------+---------+
-- (left_operand, operator, right_operand) is the primary key for this table.
-- This table contains a boolean expression that should be evaluated.
-- operator is an enum that takes one of the values ('<', '>', '=')
-- The values of left_operand and right_operand are guaranteed to be in the Variables table.
 

-- Write an SQL query to evaluate the boolean expressions in Expressions table.

-- Return the result table in any order.

-- The query result format is in the following example.

-- Variables table:
-- +------+-------+
-- | name | value |
-- +------+-------+
-- | x    | 66    |
-- | y    | 77    |
-- +------+-------+

-- Expressions table:
-- +--------------+----------+---------------+
-- | left_operand | operator | right_operand |
-- +--------------+----------+---------------+
-- | x            | >        | y             |
-- | x            | <        | y             |
-- | x            | =        | y             |
-- | y            | >        | x             |
-- | y            | <        | x             |
-- | x            | =        | x             |
-- +--------------+----------+---------------+

-- Result table:
-- +--------------+----------+---------------+-------+
-- | left_operand | operator | right_operand | value |
-- +--------------+----------+---------------+-------+
-- | x            | >        | y             | false |
-- | x            | <        | y             | true  |
-- | x            | =        | y             | false |
-- | y            | >        | x             | true  |
-- | y            | <        | x             | false |
-- | x            | =        | x             | true  |
-- +--------------+----------+---------------+-------+
-- As shown, you need find the value of each boolean exprssion in the table using the variables table.

create table #p
(
name varchar(40),
value int
);

insert into #p values
('x',66),
('y',77);

create table #q
(
left_operand varchar(40),
operator varchar (40),
right_operand varchar(40)
);

insert into #q values
(	 'x'            	,	 '>'        	,	 'y'             	),
(	 'x'            	,	 '<'        	,	 'y'             	),
(	'x'            	,	 '='        	,	 'y'             	),
(	 'y'           	,	 '>'        	,	 'x'             	),
(	 'y'            	,	 '<'        	,	 'x'             	),
(	 'x'            	,	 '='        	,	 'x'             	);

select * from #q;
select * from #p;

select left_operand,operator,right_operand,flag from (
select q.left_operand,q.operator,q.right_operand,
p.value left_value,p1.value as right_value, 
case when q.operator = '>' then left_value > right_value
when q.operator = '<'  then left_value < right_value
when q.operator = '=' then left_value = right_value end as flag
from #q q 
join #p p on  q.left_operand = p.name
join #p p1 on q.right_operand = p1.name);
