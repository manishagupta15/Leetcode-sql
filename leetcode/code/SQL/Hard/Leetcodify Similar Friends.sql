
CREATE TABLE LISTENS (
USER_ID INT,
SONG_ID INT,
[DAY] DATE
);

INSERT INTO LISTENS (USER_ID,SONG_ID,[DAY])
VALUES
(	1	,	10	,	'3/15/2021'	)	,
(	1	,	11	,	'3/15/2021'	)	,
(	1	,	12	,	'3/15/2021'	)	,
(	2	,	10	,	'3/15/2021'	)	,
(	2	,	11	,	'3/15/2021'	)	,
(	2	,	12	,	'3/15/2021'	)	,
(	3	,	10	,	'3/15/2021'	)	,
(	3	,	11	,	'3/15/2021'	)	,
(	3	,	12	,	'3/15/2021'	)	,
(	4	,	10	,	'3/15/2021'	)	,
(	4	,	11	,	'3/15/2021'	)	,
(	4	,	13	,	'3/15/2021'	)	,
(	5	,	10	,	'3/16/2021'	)	,
(	5	,	11	,	'3/16/2021'	)	,
(	5	,	12	,	'3/16/2021'	)	;

CREATE TABLE FRIENDSHIP(
USER1_ID INT,
USER2_ID INT
);


INSERT INTO FRIENDSHIP(USER1_ID,USER2_ID)
VALUES
(1,2),
(2,4),
(2,5);


SELECT L1.USER_ID AS USER1_ID , L2.USER_ID AS USER2_ID FROM LISTENS L1
JOIN LISTENS L2 ON L1.DAY=L2.DAY AND L1.SONG_ID=L2.SONG_ID AND L1.USER_ID<L2.USER_ID
JOIN FRIENDSHIP F ON L1.USER_ID= F.USER1_ID AND L2.USER_ID=F.USER2_ID
GROUP BY L1.DAY,L1.USER_ID, L2.USER_ID HAVING COUNT(DISTINCT L1.SONG_ID)>2;



